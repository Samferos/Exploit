extends KinematicBody2D

var direction
var lookDirection
var collisions
var actionCollider
var isGrabbing = false
export var grabDist = 3
export var speed = 10.0

func _ready():
	collisions = get_child(0)
	actionCollider = get_child(2)

func _process(delta):
	if Input.is_action_just_pressed("ui_accept"):
		attach_box()
	if not isGrabbing:
		direction = Vector2(float(Input.is_action_pressed("ui_right"))-float(Input.is_action_pressed("ui_left")),float(Input.is_action_pressed("ui_down"))-float(Input.is_action_pressed("ui_up")))
		direction = direction.normalized()
	if not direction == Vector2.ZERO and not isGrabbing:
		lookDirection = direction
		if lookDirection == Vector2.RIGHT:
			actionCollider.rotation_degrees = 270
		elif lookDirection == Vector2.LEFT:
			actionCollider.rotation_degrees = 90
		elif lookDirection == Vector2.UP:
			actionCollider.rotation_degrees = 180
		elif lookDirection == Vector2.DOWN:
			actionCollider.rotation_degrees = 0
	if isGrabbing:
		if actionCollider.get_overlapping_bodies().size() != 0:
			actionCollider.get_overlapping_bodies()[0].get_parent().position = position + lookDirection * grabDist
		else:
			isGrabbing = false
			speed = 10.0
		direction = Vector2(float(Input.is_action_pressed("ui_right"))-float(Input.is_action_pressed("ui_left")),float(Input.is_action_pressed("ui_down"))-float(Input.is_action_pressed("ui_up")))
		if lookDirection == Vector2.UP:
			direction *= Vector2.DOWN
		elif lookDirection == Vector2.LEFT:
			direction *= Vector2.RIGHT
		else:
			direction *= lookDirection
	move_and_collide(direction * speed * 10 * delta)

func attach_box():
	if not isGrabbing:
		if actionCollider.get_overlapping_bodies().size() != 0:
			for i in actionCollider.get_overlapping_bodies().size():
				if actionCollider.get_overlapping_bodies()[i].get_parent().is_in_group("Boxes"):
					print(actionCollider.get_overlapping_bodies()[i].get_parent())
					var box = actionCollider.get_overlapping_bodies()[i].get_parent()
					print(box.position)
					if lookDirection == Vector2.RIGHT:
						position = box.position - Vector2.RIGHT * grabDist
					elif lookDirection == Vector2.LEFT:
						position = box.position - Vector2.LEFT * grabDist
					elif lookDirection == Vector2.UP:
						position = box.position - Vector2.UP * grabDist
					elif lookDirection == Vector2.DOWN:
						position = box.position - Vector2.DOWN * grabDist
					isGrabbing = true
					speed = 5.0
	else:
		isGrabbing = false
		speed = 10.0

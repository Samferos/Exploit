extends KinematicBody2D

var direction
var health = 3
var invincibility = false
var lookDirection
onready var sprite = get_child(0)
onready var actionCollider = get_child(2)
onready var camera = get_node("../Camera2D")
var isGrabbing = false
var box
onready var walls = get_node("../Walls")
export var grabDist = 3
export var speed = 10.0

func _process(delta):
	for i in actionCollider.get_overlapping_areas().size():
		if actionCollider.get_overlapping_areas()[i].get_parent().name == "Enemy":
			ReceiveDamage()
	if Input.is_action_just_pressed("ui_accept"):
		attach_box()
	if not isGrabbing:
		direction = Vector2(float(Input.is_action_pressed("ui_right"))-float(Input.is_action_pressed("ui_left")),float(Input.is_action_pressed("ui_down"))-float(Input.is_action_pressed("ui_up")))
		direction = direction.normalized()
	if not direction == Vector2.ZERO and not isGrabbing:
		lookDirection = direction
		if lookDirection == Vector2.RIGHT:
			actionCollider.rotation_degrees = 270
		elif lookDirection == Vector2.LEFT:
			actionCollider.rotation_degrees = 90
		elif lookDirection == Vector2.UP:
			actionCollider.rotation_degrees = 180
		elif lookDirection == Vector2.DOWN:
			actionCollider.rotation_degrees = 0
	if isGrabbing:
		if actionCollider.get_overlapping_bodies().has(box.get_child(0)):
			box.position = position + lookDirection * grabDist
		else:
			print("released")
			box.get_child(2).visible = false
			isGrabbing = false
			speed = 10.0
		direction = Vector2(float(Input.is_action_pressed("ui_right"))-float(Input.is_action_pressed("ui_left")),float(Input.is_action_pressed("ui_down"))-float(Input.is_action_pressed("ui_up")))
		if lookDirection == Vector2.UP:
			direction *= Vector2.DOWN
		elif lookDirection == Vector2.LEFT:
			direction *= Vector2.RIGHT
		else:
			direction *= lookDirection
	move_and_collide(direction * speed * 10 * delta)
	if direction == Vector2.DOWN:
			sprite.animation = "FrontWalk"
	elif direction == Vector2.UP:
			sprite.animation = "BackWalk"
	elif direction == Vector2.RIGHT:
		sprite.flip_h = false
		sprite.animation = "SideWalk"
	elif direction == Vector2.LEFT:
		sprite.flip_h = true
		sprite.animation = "SideWalk"
	elif direction == Vector2.ZERO:
		var anim = sprite.animation
		anim.erase(sprite.animation.length() - 4, 4)
		sprite.set_animation(anim + "Idle")
	if health <= 0:
		get_tree().quit()

func attach_box():
	if not isGrabbing:
		if actionCollider.get_overlapping_bodies().size() != 0:
			for i in actionCollider.get_overlapping_bodies().size():
				if actionCollider.get_overlapping_bodies()[i].get_parent().is_in_group("Boxes"):
					box = actionCollider.get_overlapping_bodies()[i].get_parent()
					box.get_child(2).visible = true
					print(box)
					print(box.position)
					if lookDirection == Vector2.RIGHT:
						position = box.position - Vector2.RIGHT * grabDist
					elif lookDirection == Vector2.LEFT:
						position = box.position - Vector2.LEFT * grabDist
					elif lookDirection == Vector2.UP:
						position = box.position - Vector2.UP * grabDist
					elif lookDirection == Vector2.DOWN:
						position = box.position - Vector2.DOWN * grabDist
					isGrabbing = true
					speed = 5.0
	else:
		box.get_child(2).visible = false
		isGrabbing = false
		speed = 10.0

func ReceiveDamage():
	if not invincibility:
		camera.CameraShake(3, 3)
		invincibility = true
		health -= 1
		for _i in range(3):
			sprite.visible = false
			yield(get_tree().create_timer(0.3), "timeout")
			sprite.visible = true
			yield(get_tree().create_timer(0.3), "timeout")
		invincibility = false
		for i in actionCollider.get_overlapping_areas().size():
			if actionCollider.get_overlapping_areas()[i].get_parent().name == "Enemy":
				ReceiveDamage()
